import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'package:intl/intl.dart' as intl;

import 'app_localizations_en.dart';
import 'app_localizations_ru.dart';

// ignore_for_file: type=lint

/// Callers can lookup localized strings with an instance of AppLocalizations
/// returned by `AppLocalizations.of(context)`.
///
/// Applications need to include `AppLocalizations.delegate()` in their app's
/// `localizationDelegates` list, and the locales they support in the app's
/// `supportedLocales` list. For example:
///
/// ```dart
/// import 'l10n/app_localizations.dart';
///
/// return MaterialApp(
///   localizationsDelegates: AppLocalizations.localizationsDelegates,
///   supportedLocales: AppLocalizations.supportedLocales,
///   home: MyApplicationHome(),
/// );
/// ```
///
/// ## Update pubspec.yaml
///
/// Please make sure to update your pubspec.yaml to include the following
/// packages:
///
/// ```yaml
/// dependencies:
///   # Internationalization support.
///   flutter_localizations:
///     sdk: flutter
///   intl: any # Use the pinned version from flutter_localizations
///
///   # Rest of dependencies
/// ```
///
/// ## iOS Applications
///
/// iOS applications define key application metadata, including supported
/// locales, in an Info.plist file that is built into the application bundle.
/// To configure the locales supported by your app, you‚Äôll need to edit this
/// file.
///
/// First, open your project‚Äôs ios/Runner.xcworkspace Xcode workspace file.
/// Then, in the Project Navigator, open the Info.plist file under the Runner
/// project‚Äôs Runner folder.
///
/// Next, select the Information Property List item, select Add Item from the
/// Editor menu, then select Localizations from the pop-up menu.
///
/// Select and expand the newly-created Localizations item then, for each
/// locale your application supports, add a new item and select the locale
/// you wish to add from the pop-up menu in the Value field. This list should
/// be consistent with the languages listed in the AppLocalizations.supportedLocales
/// property.
abstract class AppLocalizations {
  AppLocalizations(String locale)
    : localeName = intl.Intl.canonicalizedLocale(locale.toString());

  final String localeName;

  static AppLocalizations? of(BuildContext context) {
    return Localizations.of<AppLocalizations>(context, AppLocalizations);
  }

  static const LocalizationsDelegate<AppLocalizations> delegate =
      _AppLocalizationsDelegate();

  /// A list of this localizations delegate along with the default localizations
  /// delegates.
  ///
  /// Returns a list of localizations delegates containing this delegate along with
  /// GlobalMaterialLocalizations.delegate, GlobalCupertinoLocalizations.delegate,
  /// and GlobalWidgetsLocalizations.delegate.
  ///
  /// Additional delegates can be added by appending to this list in
  /// MaterialApp. This list does not have to be used at all if a custom list
  /// of delegates is preferred or required.
  static const List<LocalizationsDelegate<dynamic>> localizationsDelegates =
      <LocalizationsDelegate<dynamic>>[
        delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
      ];

  /// A list of this localizations delegate's supported locales.
  static const List<Locale> supportedLocales = <Locale>[
    Locale('en'),
    Locale('ru'),
  ];

  /// No description provided for @profile.
  ///
  /// In ru, this message translates to:
  /// **'–ü—Ä–æ—Ñ–∏–ª—å'**
  String get profile;

  /// No description provided for @changeLanguage.
  ///
  /// In ru, this message translates to:
  /// **'–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫'**
  String get changeLanguage;

  /// No description provided for @changePassword.
  ///
  /// In ru, this message translates to:
  /// **'–°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å'**
  String get changePassword;

  /// No description provided for @currentPassword.
  ///
  /// In ru, this message translates to:
  /// **'–¢–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å'**
  String get currentPassword;

  /// No description provided for @newPassword.
  ///
  /// In ru, this message translates to:
  /// **'–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å'**
  String get newPassword;

  /// No description provided for @cancel.
  ///
  /// In ru, this message translates to:
  /// **'–û—Ç–º–µ–Ω–∞'**
  String get cancel;

  /// No description provided for @change.
  ///
  /// In ru, this message translates to:
  /// **'–ò–∑–º–µ–Ω–∏—Ç—å'**
  String get change;

  /// No description provided for @passwordUpdated.
  ///
  /// In ru, this message translates to:
  /// **'–ü–∞—Ä–æ–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω'**
  String get passwordUpdated;

  /// No description provided for @wrongPassword.
  ///
  /// In ru, this message translates to:
  /// **'–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å'**
  String get wrongPassword;

  /// No description provided for @logout.
  ///
  /// In ru, this message translates to:
  /// **'–í—ã–π—Ç–∏'**
  String get logout;

  /// No description provided for @about.
  ///
  /// In ru, this message translates to:
  /// **'–û –Ω–∞—Å'**
  String get about;

  /// No description provided for @aboutDescription.
  ///
  /// In ru, this message translates to:
  /// **'–≠—Ç–æ –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —á–∞—Ç-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Å–∫–≤–æ–∑–Ω—ã–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º.'**
  String get aboutDescription;

  /// No description provided for @privacy.
  ///
  /// In ru, this message translates to:
  /// **'–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏'**
  String get privacy;

  /// No description provided for @privacyDescription.
  ///
  /// In ru, this message translates to:
  /// **'Secure Chat ‚Äî —ç—Ç–æ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∫–æ–º–∞–Ω–¥–æ–π Hacker –ê—Ç—ã—Ä–∞—É ‚Äî –≤–µ–¥—É—â–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –≤ –æ–±–ª–∞—Å—Ç–∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.\n\n–ú—ã –Ω–µ —Å–æ–±–∏—Ä–∞–µ–º –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã —Å–∫–≤–æ–∑–Ω—ã–º —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º (end-to-end) –∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–∞–∂–µ –¥–ª—è –Ω–∞—à–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.\n\nüîí –í—Å–µ —á–∞—Ç—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ.\nüïµÔ∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ç—Ä–µ–∫–µ—Ä—ã, —Å–±–æ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ —Å–ª–µ–∂–∫–∞.\nüõ°Ô∏è –ö–æ–¥ –ø—Ä–æ–∑—Ä–∞—á–µ–Ω –∏ –ø–æ–¥–¥–∞—ë—Ç—Å—è –≤–Ω–µ—à–Ω–µ–º—É –∞—É–¥–∏—Ç—É.\n\n–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å —Ü–µ–ª—å—é —Å–¥–µ–ª–∞—Ç—å –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –º–∏—Ä–æ–≤—ã–º –ª–∏–¥–µ—Ä–æ–º –≤ –æ–±–ª–∞—Å—Ç–∏ —Ü–∏—Ñ—Ä–æ–≤–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. Hacker –ê—Ç—ã—Ä–∞—É ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞ —Ü–∏—Ñ—Ä–æ–≤—É—é —Å–≤–æ–±–æ–¥—É –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ.\n\n–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.\n–ú—ã ‚Äî —â–∏—Ç –≤–∞—à–µ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏.\n\n¬© 2025 Hacker –ê—Ç—ã—Ä–∞—É\n–í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.'**
  String get privacyDescription;

  /// No description provided for @ok.
  ///
  /// In ru, this message translates to:
  /// **'–û–ö'**
  String get ok;

  /// No description provided for @changeAvatar.
  ///
  /// In ru, this message translates to:
  /// **'–ò–∑–º–µ–Ω–∏—Ç—å –∞–≤–∞—Ç–∞—Ä'**
  String get changeAvatar;

  /// No description provided for @aboutMe.
  ///
  /// In ru, this message translates to:
  /// **'–û —Å–µ–±–µ'**
  String get aboutMe;

  /// No description provided for @noBioYet.
  ///
  /// In ru, this message translates to:
  /// **'–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'**
  String get noBioYet;

  /// No description provided for @editBio.
  ///
  /// In ru, this message translates to:
  /// **'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é'**
  String get editBio;

  /// No description provided for @editBioHint.
  ///
  /// In ru, this message translates to:
  /// **'–ù–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–ª–∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ...'**
  String get editBioHint;

  /// No description provided for @save.
  ///
  /// In ru, this message translates to:
  /// **'–°–æ—Ö—Ä–∞–Ω–∏—Ç—å'**
  String get save;

  /// No description provided for @offlineCommunication.
  ///
  /// In ru, this message translates to:
  /// **'–û—Ñ–ª–∞–π–Ω-—Å–≤—è–∑—å'**
  String get offlineCommunication;

  /// No description provided for @offlineCommunicationDesc.
  ///
  /// In ru, this message translates to:
  /// **'–®–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'**
  String get offlineCommunicationDesc;

  /// No description provided for @offlineChatTitle.
  ///
  /// In ru, this message translates to:
  /// **'–û—Ñ–ª–∞–π–Ω-—á–∞—Ç'**
  String get offlineChatTitle;

  /// No description provided for @offlineChatDesc.
  ///
  /// In ru, this message translates to:
  /// **'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n–°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏ –ø–æ–ª—É—á–∞—Ç—å –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–∞–∂–µ –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —Å –ø–æ–º–æ—â—å—é Bluetooth –∏–ª–∏ mesh-—Å–µ—Ç–∏.'**
  String get offlineChatDesc;

  /// No description provided for @vpn.
  ///
  /// In ru, this message translates to:
  /// **'–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π VPN'**
  String get vpn;

  /// No description provided for @vpnDesc.
  ///
  /// In ru, this message translates to:
  /// **'–ó–∞—â–∏—Ç–∏—Ç–µ —Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π VPN'**
  String get vpnDesc;

  /// No description provided for @vpnTitle.
  ///
  /// In ru, this message translates to:
  /// **'VPN-–º–æ–¥—É–ª—å'**
  String get vpnTitle;

  /// No description provided for @vpnDialogDesc.
  ///
  /// In ru, this message translates to:
  /// **'–§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ VPN —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è.\n\n–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ—Å—å —Ç—Ä–∞—Ñ–∏–∫ —á–µ—Ä–µ–∑ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—É–Ω–Ω–µ–ª—å –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.'**
  String get vpnDialogDesc;

  /// No description provided for @proxy.
  ///
  /// In ru, this message translates to:
  /// **'–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏'**
  String get proxy;

  /// No description provided for @proxyDesc.
  ///
  /// In ru, this message translates to:
  /// **'–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∫—Å–∏ –∏–ª–∏ Tor'**
  String get proxyDesc;

  /// No description provided for @proxyTitle.
  ///
  /// In ru, this message translates to:
  /// **'–ü—Ä–æ–∫—Å–∏ –∏ Tor'**
  String get proxyTitle;

  /// No description provided for @proxyDialogDesc.
  ///
  /// In ru, this message translates to:
  /// **'–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n–°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Tor –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏ –∏ –æ–±—Ö–æ–¥–∞ —Ü–µ–Ω–∑—É—Ä—ã.'**
  String get proxyDialogDesc;

  /// No description provided for @requestVerification.
  ///
  /// In ru, this message translates to:
  /// **'–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é'**
  String get requestVerification;

  /// No description provided for @requestVerificationDesc.
  ///
  /// In ru, this message translates to:
  /// **'–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –∑–Ω–∞—á–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'**
  String get requestVerificationDesc;

  /// No description provided for @chooseVerificationType.
  ///
  /// In ru, this message translates to:
  /// **'–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏'**
  String get chooseVerificationType;

  /// No description provided for @personalIdentity.
  ///
  /// In ru, this message translates to:
  /// **'–õ–∏—á–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å'**
  String get personalIdentity;

  /// No description provided for @businessOrganization.
  ///
  /// In ru, this message translates to:
  /// **'–ë–∏–∑–Ω–µ—Å / –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è'**
  String get businessOrganization;

  /// No description provided for @sendResetEmail.
  ///
  /// In ru, this message translates to:
  /// **'–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –¥–ª—è —Å–±—Ä–æ—Å–∞'**
  String get sendResetEmail;
}

class _AppLocalizationsDelegate
    extends LocalizationsDelegate<AppLocalizations> {
  const _AppLocalizationsDelegate();

  @override
  Future<AppLocalizations> load(Locale locale) {
    return SynchronousFuture<AppLocalizations>(lookupAppLocalizations(locale));
  }

  @override
  bool isSupported(Locale locale) =>
      <String>['en', 'ru'].contains(locale.languageCode);

  @override
  bool shouldReload(_AppLocalizationsDelegate old) => false;
}

AppLocalizations lookupAppLocalizations(Locale locale) {
  // Lookup logic when only language code is specified.
  switch (locale.languageCode) {
    case 'en':
      return AppLocalizationsEn();
    case 'ru':
      return AppLocalizationsRu();
  }

  throw FlutterError(
    'AppLocalizations.delegate failed to load unsupported locale "$locale". This is likely '
    'an issue with the localizations generation tool. Please file an issue '
    'on GitHub with a reproducible sample app and the gen-l10n configuration '
    'that was used.',
  );
}
